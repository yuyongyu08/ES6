/*
* const实际上保证的，并不是变量的值不得改动，而是【变量指向的那个内存地址不得改动】。
* 对于简单类型的数据（数值、字符串、布尔值），值就保存在变量指向的那个内存地址，因此等同于常量。
* 但对于复合类型的数据（主要是对象和数组），变量指向的内存地址，保存的只是一个指针，const只能保证这个指针是固定的，至于它指向的数据结构是不是可变的，就完全不能控制了。
* 因此，将一个对象声明为常量必须非常小心。
* */

const foo = {};

foo.prop = 'hello const'; // 为 foo 添加一个属性，可以成功

console.log(foo); //{ prop: 'hello const' }

foo = {size: 2}; // 将 foo 指向另一个对象，就会报错


/*
* ES6声明方式
* 1.var
* 2.function
* 3.let
* 4.const
* 5.import
* 6.class
* */